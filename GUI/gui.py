# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5 import QtGui
from PyQt5.QtWidgets import QWidget, QApplication, QLabel, QVBoxLayout
from PyQt5.QtGui import QPixmap
import sys
import cv2
from PyQt5.QtCore import pyqtSignal, pyqtSlot, Qt, QThread
import numpy as np


class VideoThread(QThread):
    change_pixmap_signal = pyqtSignal(np.ndarray)

    def __init__(self):
        super().__init__()
        self._run_flag = True

    def run(self):
        # capture from web cam
        cap = cv2.VideoCapture(0)
        while self._run_flag:
            ret, cv_img = cap.read()
            if ret:
                self.change_pixmap_signal.emit(cv_img)
        # shut down capture system
        cap.release()

    def stop(self):
        """Sets run flag to False and waits for thread to finish"""
        self._run_flag = False
        self.wait()

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        self.disply_width = 640
        self.display_height = 480

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1107, 769)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.lJudul = QtWidgets.QLabel(self.centralwidget)
        self.lJudul.setGeometry(QtCore.QRect(0, 0, 1101, 81))
        self.lJudul.setAlignment(QtCore.Qt.AlignCenter)
        self.lJudul.setWordWrap(True)
        self.lJudul.setObjectName("lJudul")
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        self.tabWidget.setGeometry(QtCore.QRect(0, 70, 1111, 591))
        self.tabWidget.setObjectName("tab  Widget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.l = QtWidgets.QLabel(self.tab)
        self.l.setGeometry(QtCore.QRect(10, 30, 131, 31))
        self.l.setWordWrap(True)
        self.l.setObjectName("l")
        self.teClass = QtWidgets.QTextEdit(self.tab)
        self.teClass.setGeometry(QtCore.QRect(140, 30, 811, 61))
        self.teClass.setAcceptRichText(True)
        self.teClass.setObjectName("teClass")
        self.btnBuatDataset = QtWidgets.QPushButton(self.tab)
        self.btnBuatDataset.setGeometry(QtCore.QRect(960, 30, 141, 31))
        self.btnBuatDataset.setObjectName("btnBuatDataset")
        self.lImage = QtWidgets.QLabel(self.tab)
        self.lImage.setGeometry(QtCore.QRect(10, 140, 640, 480))
        self.lImage.resize(self.disply_width, self.display_height)
        self.lImage.setAlignment(QtCore.Qt.AlignCenter)
        self.lImage.setObjectName("lImage")
        self.lPreview_image = QtWidgets.QLabel(self.tab)
        self.lPreview_image.setGeometry(QtCore.QRect(680, 140, 200, 200))
        self.lPreview_image.setToolTipDuration(-1)
        self.lPreview_image.setAlignment(QtCore.Qt.AlignCenter)
        self.lPreview_image.setObjectName("lPreview_image")
        self.lPetunjuk = QtWidgets.QLabel(self.tab)
        self.lPetunjuk.setGeometry(QtCore.QRect(910, 160, 200, 161))
        self.lPetunjuk.setToolTipDuration(-1)
        self.lPetunjuk.setTextFormat(QtCore.Qt.RichText)
        self.lPetunjuk.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        self.lPetunjuk.setWordWrap(True)
        self.lPetunjuk.setObjectName("lPetunjuk")
        self.lCount_image = QtWidgets.QLabel(self.tab)
        self.lCount_image.setGeometry(QtCore.QRect(670, 340, 181, 31))
        self.lCount_image.setObjectName("lCount_image")
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.tabWidget.addTab(self.tab_3, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1107, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # create the video capture thread
        self.thread = VideoThread()
        # connect its signal to the update_image slot
        self.thread.change_pixmap_signal.connect(self.update_image)
        # start the thread
        self.thread.start()

    def closeEvent(self, event):
        self.thread.stop()
        event.accept()

    @pyqtSlot(np.ndarray)
    def update_image(self, cv_img):
        """Updates the image_label with a new opencv image"""
        qt_img = self.convert_cv_qt(cv_img)
        print(qt_img)
        self.lImage.setPixmap(qt_img)

    def convert_cv_qt(self, cv_img):
        """Convert from an opencv image to QPixmap"""
        rgb_image = cv2.cvtColor(cv_img, cv2.COLOR_BGR2RGB)
        h, w, ch = rgb_image.shape
        bytes_per_line = ch * w
        convert_to_Qt_format = QtGui.QImage(rgb_image.data, w, h, bytes_per_line, QtGui.QImage.Format_RGB888)
        p = convert_to_Qt_format.scaled(self.disply_width, self.display_height, Qt.KeepAspectRatio)
        return QPixmap.fromImage(p)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.lJudul.setText(_translate("MainWindow", "<html><head/><body><p align=\"center\"><span style=\" font-size:14pt; font-weight:600;\">KONVERSI BAHASA ISYARAT (SIBI) KE TEKS  BAHASA INDONESIA DENGAN MENGGUNAKAN CONVULUTIONAL NEURAL NETWORK (CNN)</span></p></body></html>"))
        self.l.setText(_translate("MainWindow", "Masukkan Class dataset (*pisah dengan koma)"))
        self.teClass.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.btnBuatDataset.setText(_translate("MainWindow", "Buat Dataset"))
        self.lImage.setText(_translate("MainWindow", "TextLabel"))
        self.lPreview_image.setText(_translate("MainWindow", "Preview Gambar Tangan"))
        self.lPetunjuk.setText(_translate("MainWindow", "Gunakan Tombol C untuk Capture. gunakan tombol n untuk lanjut ke class berikutnya"))
        self.lCount_image.setText(_translate("MainWindow", "<html><head/><body><p align=\"right\"><span style=\" font-size:14pt;\">Jumlah Gambar : 2</span></p></body></html>"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Buat Data Set"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("MainWindow", "Training"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Testing"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
